// Code generated by MockGen. DO NOT EDIT.
// Source: internal/server/repository/notes.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	repository "github.com/Galish/goph-keeper/internal/server/repository"
	gomock "github.com/golang/mock/gomock"
)

// MockSecureNotesRepository is a mock of SecureNotesRepository interface.
type MockSecureNotesRepository struct {
	ctrl     *gomock.Controller
	recorder *MockSecureNotesRepositoryMockRecorder
}

// MockSecureNotesRepositoryMockRecorder is the mock recorder for MockSecureNotesRepository.
type MockSecureNotesRepositoryMockRecorder struct {
	mock *MockSecureNotesRepository
}

// NewMockSecureNotesRepository creates a new mock instance.
func NewMockSecureNotesRepository(ctrl *gomock.Controller) *MockSecureNotesRepository {
	mock := &MockSecureNotesRepository{ctrl: ctrl}
	mock.recorder = &MockSecureNotesRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSecureNotesRepository) EXPECT() *MockSecureNotesRepositoryMockRecorder {
	return m.recorder
}

// AddSecureNote mocks base method.
func (m *MockSecureNotesRepository) AddSecureNote(ctx context.Context, note *repository.SecureNote) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddSecureNote", ctx, note)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddSecureNote indicates an expected call of AddSecureNote.
func (mr *MockSecureNotesRepositoryMockRecorder) AddSecureNote(ctx, note interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddSecureNote", reflect.TypeOf((*MockSecureNotesRepository)(nil).AddSecureNote), ctx, note)
}

// DeleteSecureNote mocks base method.
func (m *MockSecureNotesRepository) DeleteSecureNote(ctx context.Context, user, id string, noteType repository.SecureNoteType) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteSecureNote", ctx, user, id, noteType)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteSecureNote indicates an expected call of DeleteSecureNote.
func (mr *MockSecureNotesRepositoryMockRecorder) DeleteSecureNote(ctx, user, id, noteType interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSecureNote", reflect.TypeOf((*MockSecureNotesRepository)(nil).DeleteSecureNote), ctx, user, id, noteType)
}

// GetSecureNote mocks base method.
func (m *MockSecureNotesRepository) GetSecureNote(ctx context.Context, user, id string, noteType repository.SecureNoteType) (*repository.SecureNote, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSecureNote", ctx, user, id, noteType)
	ret0, _ := ret[0].(*repository.SecureNote)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSecureNote indicates an expected call of GetSecureNote.
func (mr *MockSecureNotesRepositoryMockRecorder) GetSecureNote(ctx, user, id, noteType interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSecureNote", reflect.TypeOf((*MockSecureNotesRepository)(nil).GetSecureNote), ctx, user, id, noteType)
}

// GetSecureNotes mocks base method.
func (m *MockSecureNotesRepository) GetSecureNotes(ctx context.Context, user string, noteType repository.SecureNoteType) ([]*repository.SecureNote, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSecureNotes", ctx, user, noteType)
	ret0, _ := ret[0].([]*repository.SecureNote)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSecureNotes indicates an expected call of GetSecureNotes.
func (mr *MockSecureNotesRepositoryMockRecorder) GetSecureNotes(ctx, user, noteType interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSecureNotes", reflect.TypeOf((*MockSecureNotesRepository)(nil).GetSecureNotes), ctx, user, noteType)
}

// UpdateSecureNote mocks base method.
func (m *MockSecureNotesRepository) UpdateSecureNote(ctx context.Context, note *repository.SecureNote) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateSecureNote", ctx, note)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateSecureNote indicates an expected call of UpdateSecureNote.
func (mr *MockSecureNotesRepositoryMockRecorder) UpdateSecureNote(ctx, note interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateSecureNote", reflect.TypeOf((*MockSecureNotesRepository)(nil).UpdateSecureNote), ctx, note)
}
