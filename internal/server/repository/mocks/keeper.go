// Code generated by MockGen. DO NOT EDIT.
// Source: internal/server/repository/keeper.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"

	repository "github.com/Galish/goph-keeper/internal/server/repository"
)

// MockKeeperRepository is a mock of KeeperRepository interface.
type MockKeeperRepository struct {
	ctrl     *gomock.Controller
	recorder *MockKeeperRepositoryMockRecorder
}

// MockKeeperRepositoryMockRecorder is the mock recorder for MockKeeperRepository.
type MockKeeperRepositoryMockRecorder struct {
	mock *MockKeeperRepository
}

// NewMockKeeperRepository creates a new mock instance.
func NewMockKeeperRepository(ctrl *gomock.Controller) *MockKeeperRepository {
	mock := &MockKeeperRepository{ctrl: ctrl}
	mock.recorder = &MockKeeperRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKeeperRepository) EXPECT() *MockKeeperRepositoryMockRecorder {
	return m.recorder
}

// AddSecureRecord mocks base method.
func (m *MockKeeperRepository) AddSecureRecord(ctx context.Context, record *repository.SecureRecord) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddSecureRecord", ctx, record)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddSecureRecord indicates an expected call of AddSecureRecord.
func (mr *MockKeeperRepositoryMockRecorder) AddSecureRecord(ctx, record interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddSecureRecord", reflect.TypeOf((*MockKeeperRepository)(nil).AddSecureRecord), ctx, record)
}

// DeleteSecureRecord mocks base method.
func (m *MockKeeperRepository) DeleteSecureRecord(ctx context.Context, user, id string, recordType repository.SecureRecordType) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteSecureRecord", ctx, user, id, recordType)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteSecureRecord indicates an expected call of DeleteSecureRecord.
func (mr *MockKeeperRepositoryMockRecorder) DeleteSecureRecord(ctx, user, id, recordType interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSecureRecord", reflect.TypeOf((*MockKeeperRepository)(nil).DeleteSecureRecord), ctx, user, id, recordType)
}

// GetSecureRecord mocks base method.
func (m *MockKeeperRepository) GetSecureRecord(ctx context.Context, user, id string, recordType repository.SecureRecordType) (*repository.SecureRecord, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSecureRecord", ctx, user, id, recordType)
	ret0, _ := ret[0].(*repository.SecureRecord)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSecureRecord indicates an expected call of GetSecureRecord.
func (mr *MockKeeperRepositoryMockRecorder) GetSecureRecord(ctx, user, id, recordType interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSecureRecord", reflect.TypeOf((*MockKeeperRepository)(nil).GetSecureRecord), ctx, user, id, recordType)
}

// GetSecureRecords mocks base method.
func (m *MockKeeperRepository) GetSecureRecords(ctx context.Context, user string, recordType repository.SecureRecordType) ([]*repository.SecureRecord, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSecureRecords", ctx, user, recordType)
	ret0, _ := ret[0].([]*repository.SecureRecord)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSecureRecords indicates an expected call of GetSecureRecords.
func (mr *MockKeeperRepositoryMockRecorder) GetSecureRecords(ctx, user, recordType interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSecureRecords", reflect.TypeOf((*MockKeeperRepository)(nil).GetSecureRecords), ctx, user, recordType)
}

// UpdateSecureRecord mocks base method.
func (m *MockKeeperRepository) UpdateSecureRecord(ctx context.Context, record *repository.SecureRecord) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateSecureRecord", ctx, record)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateSecureRecord indicates an expected call of UpdateSecureRecord.
func (mr *MockKeeperRepositoryMockRecorder) UpdateSecureRecord(ctx, record interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateSecureRecord", reflect.TypeOf((*MockKeeperRepository)(nil).UpdateSecureRecord), ctx, record)
}
